<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.pay.business.dao.OrdersMapper" >
  <resultMap id="BaseResultMap" type="com.pay.business.bean.Orders" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="out_trade_no" property="outTradeNo" jdbcType="VARCHAR" />
    <result column="out_request_no" property="outRequestNo" jdbcType="VARCHAR" />
    <result column="auth_no" property="authNo" jdbcType="VARCHAR" />
    <result column="total_fee" property="totalFee" jdbcType="DECIMAL" />
    <result column="refund_fee" property="refundFee" jdbcType="DECIMAL" />
    <result column="pay_fee" property="payFee" jdbcType="DECIMAL" />
    <result column="limit_pay" property="limitPay" jdbcType="VARCHAR" />
    <result column="subject" property="subject" jdbcType="VARCHAR" />
    <result column="body" property="body" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="BIGINT" />
    <result column="expire_time" property="expireTime" jdbcType="INTEGER" />
    <result column="verify_code" property="verifyCode" jdbcType="VARCHAR" />
    <result column="code_create_time" property="codeCreateTime" jdbcType="BIGINT" />
    <result column="state" property="state" jdbcType="VARCHAR" />
    <result column="freeze_notify_url" property="freezeNotifyUrl" jdbcType="VARCHAR" />
    <result column="freeze_return_url" property="freezeReturnUrl" jdbcType="VARCHAR" />
    <result column="refund_notify_url" property="refundNotifyUrl" jdbcType="VARCHAR" />
    <result column="pay_notify_url" property="payNotifyUrl" jdbcType="VARCHAR" />
    <result column="payer_user_id" property="payerUserId" jdbcType="VARCHAR" />
    <result column="seller_user_id" property="sellerUserId" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, out_trade_no, out_request_no, auth_no, total_fee, limit_pay, subject, body, create_time, 
    expire_time, verify_code, code_create_time, state, freeze_notify_url, refund_notify_url, 
    pay_notify_url, payer_user_id, seller_user_id,refund_fee,freeze_return_url,pay_fee
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from orders
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from orders
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.pay.business.bean.Orders" >
    insert into orders (id, out_trade_no, out_request_no, 
      auth_no, total_fee, limit_pay, 
      subject, body, create_time, 
      expire_time, verify_code, code_create_time, 
      state, freeze_notify_url, refund_notify_url, 
      pay_notify_url, payer_user_id, seller_user_id,refund_fee,freeze_return_url,pay_fee
      )
    values (#{id,jdbcType=BIGINT}, #{outTradeNo,jdbcType=VARCHAR}, #{outRequestNo,jdbcType=VARCHAR}, 
      #{authNo,jdbcType=VARCHAR}, #{totalFee,jdbcType=DECIMAL}, #{limitPay,jdbcType=VARCHAR}, 
      #{subject,jdbcType=VARCHAR}, #{body,jdbcType=VARCHAR}, #{createTime,jdbcType=BIGINT}, 
      #{expireTime,jdbcType=INTEGER}, #{verifyCode,jdbcType=VARCHAR}, #{codeCreateTime,jdbcType=BIGINT}, 
      #{state,jdbcType=VARCHAR}, #{freezeNotifyUrl,jdbcType=VARCHAR}, #{refundNotifyUrl,jdbcType=VARCHAR}, 
      #{payNotifyUrl,jdbcType=VARCHAR}, #{payerUserId,jdbcType=VARCHAR}, #{sellerUserId,jdbcType=VARCHAR}
      , #{refundFee,jdbcType=DECIMAL},#{freezeReturnUrl,jdbcType=VARCHAR}
      , #{payFee,jdbcType=DECIMAL})
  </insert>
  <insert id="insertSelective" parameterType="com.pay.business.bean.Orders" >
    insert into orders
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="outTradeNo != null" >
        out_trade_no,
      </if>
      <if test="outRequestNo != null" >
        out_request_no,
      </if>
      <if test="authNo != null" >
        auth_no,
      </if>
      <if test="totalFee != null" >
        total_fee,
      </if>
      <if test="limitPay != null" >
        limit_pay,
      </if>
      <if test="subject != null" >
        subject,
      </if>
      <if test="body != null" >
        body,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="expireTime != null" >
        expire_time,
      </if>
      <if test="verifyCode != null" >
        verify_code,
      </if>
      <if test="codeCreateTime != null" >
        code_create_time,
      </if>
      <if test="state != null" >
        state,
      </if>
      <if test="freezeNotifyUrl != null" >
        freeze_notify_url,
      </if>
      <if test="refundNotifyUrl != null" >
        refund_notify_url,
      </if>
      <if test="payNotifyUrl != null" >
        pay_notify_url,
      </if>
      <if test="payerUserId != null" >
        payer_user_id,
      </if>
      <if test="sellerUserId != null" >
        seller_user_id,
      </if>
      <if test="refundFee != null" >
        refund_fee,
      </if>
      <if test="freezeReturnUrl != null" >
        freeze_return_url,
      </if>
      <if test="payFee != null" >
        pay_fee
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="outTradeNo != null" >
        #{outTradeNo,jdbcType=VARCHAR},
      </if>
      <if test="outRequestNo != null" >
        #{outRequestNo,jdbcType=VARCHAR},
      </if>
      <if test="authNo != null" >
        #{authNo,jdbcType=VARCHAR},
      </if>
      <if test="totalFee != null" >
        #{totalFee,jdbcType=DECIMAL},
      </if>
      <if test="limitPay != null" >
        #{limitPay,jdbcType=VARCHAR},
      </if>
      <if test="subject != null" >
        #{subject,jdbcType=VARCHAR},
      </if>
      <if test="body != null" >
        #{body,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=BIGINT},
      </if>
      <if test="expireTime != null" >
        #{expireTime,jdbcType=INTEGER},
      </if>
      <if test="verifyCode != null" >
        #{verifyCode,jdbcType=VARCHAR},
      </if>
      <if test="codeCreateTime != null" >
        #{codeCreateTime,jdbcType=BIGINT},
      </if>
      <if test="state != null" >
        #{state,jdbcType=VARCHAR},
      </if>
      <if test="freezeNotifyUrl != null" >
        #{freezeNotifyUrl,jdbcType=VARCHAR},
      </if>
      <if test="refundNotifyUrl != null" >
        #{refundNotifyUrl,jdbcType=VARCHAR},
      </if>
      <if test="payNotifyUrl != null" >
        #{payNotifyUrl,jdbcType=VARCHAR},
      </if>
      <if test="payerUserId != null" >
        #{payerUserId,jdbcType=VARCHAR},
      </if>
      <if test="sellerUserId != null" >
        #{sellerUserId,jdbcType=VARCHAR},
      </if>
      <if test="refundFee != null" >
        #{refundFee,jdbcType=DECIMAL},
      </if>
      <if test="freezeReturnUrl != null" >
        #{freezeReturnUrl,jdbcType=VARCHAR},
      </if>
      <if test="payFee != null" >
        #{payFee,jdbcType=DECIMAL}
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.pay.business.bean.Orders" >
    update orders
    <set >
      <if test="outTradeNo != null" >
        out_trade_no = #{outTradeNo,jdbcType=VARCHAR},
      </if>
      <if test="outRequestNo != null" >
        out_request_no = #{outRequestNo,jdbcType=VARCHAR},
      </if>
      <if test="authNo != null" >
        auth_no = #{authNo,jdbcType=VARCHAR},
      </if>
      <if test="totalFee != null" >
        total_fee = #{totalFee,jdbcType=DECIMAL},
      </if>
      <if test="limitPay != null" >
        limit_pay = #{limitPay,jdbcType=VARCHAR},
      </if>
      <if test="subject != null" >
        subject = #{subject,jdbcType=VARCHAR},
      </if>
      <if test="body != null" >
        body = #{body,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=BIGINT},
      </if>
      <if test="expireTime != null" >
        expire_time = #{expireTime,jdbcType=INTEGER},
      </if>
      <if test="verifyCode != null" >
        verify_code = #{verifyCode,jdbcType=VARCHAR},
      </if>
      <if test="codeCreateTime != null" >
        code_create_time = #{codeCreateTime,jdbcType=BIGINT},
      </if>
      <if test="state != null" >
        state = #{state,jdbcType=VARCHAR},
      </if>
      <if test="freezeNotifyUrl != null" >
        freeze_notify_url = #{freezeNotifyUrl,jdbcType=VARCHAR},
      </if>
      <if test="refundNotifyUrl != null" >
        refund_notify_url = #{refundNotifyUrl,jdbcType=VARCHAR},
      </if>
      <if test="payNotifyUrl != null" >
        pay_notify_url = #{payNotifyUrl,jdbcType=VARCHAR},
      </if>
      <if test="payerUserId != null" >
        payer_user_id = #{payerUserId,jdbcType=VARCHAR},
      </if>
      <if test="sellerUserId != null" >
        seller_user_id = #{sellerUserId,jdbcType=VARCHAR},
      </if>
      <if test="refundFee != null" >
        refund_fee = #{refundFee,jdbcType=DECIMAL},
      </if>
      <if test="freezeReturnUrl != null" >
        freeze_return_url = #{freezeReturnUrl,jdbcType=VARCHAR},
      </if>
      <if test="payFee != null" >
        pay_fee = #{payFee,jdbcType=DECIMAL}
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.pay.business.bean.Orders" >
    update orders
    set out_trade_no = #{outTradeNo,jdbcType=VARCHAR},
      out_request_no = #{outRequestNo,jdbcType=VARCHAR},
      auth_no = #{authNo,jdbcType=VARCHAR},
      total_fee = #{totalFee,jdbcType=DECIMAL},
      limit_pay = #{limitPay,jdbcType=VARCHAR},
      subject = #{subject,jdbcType=VARCHAR},
      body = #{body,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=BIGINT},
      expire_time = #{expireTime,jdbcType=INTEGER},
      verify_code = #{verifyCode,jdbcType=VARCHAR},
      code_create_time = #{codeCreateTime,jdbcType=BIGINT},
      state = #{state,jdbcType=VARCHAR},
      freeze_notify_url = #{freezeNotifyUrl,jdbcType=VARCHAR},
      refund_notify_url = #{refundNotifyUrl,jdbcType=VARCHAR},
      pay_notify_url = #{payNotifyUrl,jdbcType=VARCHAR},
      payer_user_id = #{payerUserId,jdbcType=VARCHAR},
      seller_user_id = #{sellerUserId,jdbcType=VARCHAR},
      refund_fee = #{refundFee,jdbcType=DECIMAL},
      freeze_return_url = #{freezeReturnUrl,jdbcType=VARCHAR},
      pay_fee = #{payFee,jdbcType=DECIMAL}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <select id="selectByNo" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from orders
    where out_trade_no = #{outTradeNo,jdbcType=VARCHAR}
  </select>
  <select id="getOrders"  resultMap="BaseResultMap">
  	select 
    <include refid="Base_Column_List" />
    from orders
    order by id desc
  </select>
</mapper>